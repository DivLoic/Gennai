object session{  /**   * lecture 1.5. coursera scala classes   */  // -- Non-nested functions  def abs(x: Double) =  if(x < 0) -x else x  def isGoodEnough(guess: Double, x: Double) =    abs(guess * guess - x) / x < 0.001    def improve(guess: Double, x: Double) =    abs(guess + x / guess ) / 2  def sqrtIter(guess: Double, x: Double): Double =    if(isGoodEnough(guess, x)) guess    else sqrtIter(improve(guess, x), x)  def sqrt(x: Double): Double = sqrtIter(1.0, x)  // -- Nested functions  def sqrFact(x: Double): Double = {    val guess: Double = 1.0    def isGood(guess: Double) =      abs(guess * guess - x) / x < 0.001    def imp(guess: Double): Double =      abs(guess + x / guess ) / 2    def sqr(guess: Double): Double =      if(isGood(guess)) guess      else sqr(imp(guess))    return sqr(x)  }  sqrt(2)  sqrt(9)  sqrFact(15)}